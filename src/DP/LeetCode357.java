package DP;

/**
 * @author OovEver
 * 2018/1/6 15:15
 * 这是一个数字组合问题。最多可以解决10个循环。
当n == 0时，返回1.我从测试用例中得到了这个答案。
当n == 1时，_可以把10位数字放在唯一的位置上。 [0，...，10]。答案是10。
当n == 2时，__第一个数字有9个选择[1，...，9]，第二个数字有9个选择，不包括已经选择的一个。所以总共9 * 9 = 81。答案应该是10 + 81 = 91
当n == 3时，_ _ _总选择是9 * 9 * 8 = 684.答案是10 + 81 + 648 = 739
当n == 4时，_ _ _ _总选择是9 * 9 * 8 * 7。
...
当n == 10时，总的选择是9 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1
当n == 11时，总选择是9 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1 * 0 = 0
 */
public class LeetCode357 {
    public int countNumbersWithUniqueDigits(int n) {
        if (n == 0) {
            return 1;
        }
        int ans = 10, base = 9;
        for(int i=2;i<=n;i++) {
            base = base * (9 - i + 2);
            ans += base;
        }
        return ans;
    }
}
